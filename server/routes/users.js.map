{"version":3,"sources":["routes/users.ts"],"names":[],"mappings":"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","file":"routes/users.js","sourcesContent":["import express = require('express');\r\nvar router = express.Router();\r\n\r\n// db references\r\nimport mongoose = require('mongoose');\r\nimport userModel = require('../models/user');\r\n\r\nimport User = userModel.User;\r\n\r\n// GET - show main users page\r\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\r\n   \r\n    // use the User model to query the Users collection\r\n    User.find(function(error, users) {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of users\r\n            res.render('users/index', {\r\n                title: 'Users',\r\n                users: users\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// GET add page - show the blank form\r\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\r\n    res.render('users/add', {\r\n        title: 'Add a New User'\r\n    });\r\n});\r\n\r\n// POST add page - save the new user\r\nrouter.post('/add', function(req: express.Request, res: express.Response, next: any) {\r\n    User.create({\r\n        title: req.body.title,\r\n        content: req.body.content\r\n    }, function(error, User) {\r\n        // did we get back an error or valid User object?\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/users');\r\n        }\r\n    })\r\n});\r\n\r\n// GET edit page - show the current user in the form\r\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    var id = req.params.id;\r\n\r\n    User.findById(id, (error, User) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            //show the edit view\r\n            res.render('users/edit', {\r\n                title: 'User Details',\r\n                user: User\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// POST edit page - update the selected user\r\nrouter.post('/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // grab the id from the url parameter\r\n    var id = req.params.id;\r\n\r\n    // create and populate an user object\r\n    var user = new User({\r\n        _id: id,\r\n        title: req.body.title,\r\n        content: req.body.content\r\n    });\r\n\r\n    // run the update using mongoose and our model\r\n    User.update({ _id: id }, user, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/users');\r\n        }\r\n    });\r\n});\r\n\r\n// GET delete user\r\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // get the id from the url\r\n    var id = req.params.id;\r\n\r\n    // use the model and delete this record\r\n    User.remove({ _id: id }, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/users');\r\n        }\r\n    });\r\n});\r\n\r\n// make this public\r\nmodule.exports = router;"],"sourceRoot":"/source/"}